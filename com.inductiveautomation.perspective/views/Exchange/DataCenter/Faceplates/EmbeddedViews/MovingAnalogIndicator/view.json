{
  "custom": {
    "currentValue": 480,
    "engHigh": 490,
    "engLow": 470,
    "engUnits": "V"
  },
  "params": {
    "maiBasis": "80px",
    "movingAnalogIndicator": {
      "alarms": {
        "inactiveRangeColor": "var(--neutral-60)",
        "level1": {
          "highHigh": null,
          "lowLow": null,
          "rangeColor": "var(--error)"
        },
        "level2": {
          "high": null,
          "low": null,
          "rangeColor": "var(--warningSecondary)"
        }
      },
      "defaultRangeColor": "var(--neutral-10)",
      "desired": {
        "high": 486,
        "low": 474,
        "rangeColor": "var(--callToAction)"
      },
      "indicator": {
        "color": "var(--label)",
        "reverse": false,
        "size": 8,
        "stroke": {
          "color": "var(--neutral-100)",
          "width": 0
        }
      },
      "interlocks": {
        "high": null,
        "low": null,
        "rangeColor": "var(--neutral-100)"
      },
      "label": {
        "format": "#,##0",
        "position": {
          "applyOffsetsOnlyWhenLabelVisible": true,
          "horizontalOffset": 1,
          "verticalOffset": 1
        },
        "style": {
          "classes": "",
          "fill": "var(--neutral-100)",
          "fontSize": 4
        },
        "visible": false
      },
      "rangesBar": {
        "size": 10,
        "stroke": {
          "color": "var(--neutral-50)",
          "width": 0.2
        },
        "verticalDisplay": true
      },
      "setpoint": {
        "color": "var(--neutral-10)",
        "stroke": {
          "color": "var(--info)",
          "width": 0.5
        },
        "value": null
      }
    },
    "numberFormat": "#,##0.#",
    "tagPath": "[DataCenterDemo]Exchange/DataCenterDemo/Site1/DataHall1/Section1/UPS/UPS1A/Output/SystemOutputVoltageCA",
    "title": "A"
  },
  "propConfig": {
    "custom.currentValue": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "tagPath": "{view.params.tagPath}"
          },
          "tagPath": "{tagPath}"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.engHigh": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "tagPath": "{view.params.tagPath}"
          },
          "tagPath": "{tagPath}.engHigh"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.engLow": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "tagPath": "{view.params.tagPath}"
          },
          "tagPath": "{tagPath}.engLow"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.engUnits": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "tagPath": "{view.params.tagPath}"
          },
          "tagPath": "{tagPath}.engUnit"
        },
        "transforms": [
          {
            "code": "\tif value not in [\u0027n/a\u0027, None]:\n\t\treturn value\n\telse:\n\t\treturn \u0027\u0027",
            "type": "script"
          }
        ],
        "type": "tag"
      },
      "persistent": true
    },
    "params.maiBasis": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.movingAnalogIndicator": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.numberFormat": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.tagPath": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.title": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 150,
      "width": 103
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Title"
        },
        "position": {
          "shrink": 0
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.params.title"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "classes": "exchange/datacenter/faceplates/section-title/base exchange/datacenter/faceplates/section-title/primary"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "MovingAnalogIndicator"
        },
        "position": {
          "grow": 1
        },
        "propConfig": {
          "position.basis": {
            "binding": {
              "config": {
                "path": "view.params.maiBasis"
              },
              "type": "property"
            }
          },
          "props.params": {
            "binding": {
              "config": {
                "struct": {
                  "maxValue": "{view.custom.engHigh}",
                  "minValue": "{view.custom.engLow}",
                  "movingAnalogIndicator": "{view.params.movingAnalogIndicator}",
                  "processValue": "{view.custom.currentValue}"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\tparams \u003d {key: theValue for key, theValue in value.get(\u0027movingAnalogIndicator\u0027).iteritems()}\n\t\n\tparams[\u0027minValue\u0027] \u003d value.get(\u0027minValue\u0027)\n\tparams[\u0027maxValue\u0027] \u003d value.get(\u0027maxValue\u0027)\n\tparams[\u0027processValue\u0027] \u003d value.get(\u0027processValue\u0027)\n\t\n\treturn params",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          }
        },
        "props": {
          "path": "Exchange/SVGMovingAnalogIndicator/SVGMovingAnalogIndicator"
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "Value"
        },
        "position": {
          "shrink": 0
        },
        "propConfig": {
          "props.params.units": {
            "binding": {
              "config": {
                "path": "view.custom.engUnits"
              },
              "type": "property"
            }
          },
          "props.params.value": {
            "binding": {
              "config": {
                "expression": "if({view.custom.engUnits}\u003d\u0027%\u0027,\r\nnumberFormat({view.custom.currentValue} * 100.0, {view.params.numberFormat}),\r\nnumberFormat({view.custom.currentValue}, {view.params.numberFormat}))"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "params": {
            "baseClass": "exchange/datacenter/framework/data/base"
          },
          "path": "Exchange/DataCenter/Framework/Data/Value"
        },
        "type": "ia.display.view"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column"
    },
    "type": "ia.container.flex"
  }
}